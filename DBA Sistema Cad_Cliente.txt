create table Cliente(
ID int auto_increment primary key,
Nome varchar(50), 
Telefone varchar(50),
Estado varchar(50) ,
Cidade varchar(50) , 
Endereço varchar(50) ,
Numero varchar(50), 
CEP varchar(50), 
Instagram varchar(50)
);
create table Pedido(
Num_Pedido int auto_increment primary key,
Produto varchar(100) ,
Cliente_Cadastrado varchar(100),
Status_Pedido varchar(100),
Valor_Total float, 
Valor_Pago float,
Restante float null,
Custo float,
Forma_Pagamento varchar(50), 
Data_Pedido varchar(50),
Data_Entrega varchar(50),
Cliente int,
foreign key (Cliente) references Cliente(ID)
);
create table Financas(
id_Financas int auto_increment primary key,
Vendas_Total float,
Custo_Total float,
Lucro_Total float,
Maluart_50 float,
Salario_30 float,
Investimento_20 float,

);
insert into Financas (Vendas_Total, Custo_Total, Lucro_Total, Maluart_50, Salario_30, Investimento_20) 
select sum(p.Valor_Total), sum(p.Custo), (sum(p.Valor_Total)-sum(p.Custo)), ((sum(p.Valor_Total)-sum(p.Custo))*0.5), ((sum(p.Valor_Total)-sum(p.Custo))*0.3), ((sum(p.Valor_Total)-sum(p.Custo))*0.2)
from Pedido p;

-- Criando trigger para cada vez que adicione um pedido ele atualize os valores da tabela finanças
delimiter $$
create trigger Financas_TR_Insert after insert
on Pedido
for each row
begin
update Financas 
set Vendas_Total = (select sum(p.Valor_Total) from Pedido p);

update Financas 
set Custo_Total = (select sum(p.Custo) from Pedido p);

update Financas 
set Lucro_Total = (select (sum(p.Valor_Total)-sum(p.Custo)) from Pedido p);

update Financas 
set Maluart_50 = (select ((sum(p.Valor_Total)-sum(p.Custo))*0.5) from Pedido p);

update Financas 
set Salario_30 = (select ((sum(p.Valor_Total)-sum(p.Custo))*0.3) from Pedido p);

update Financas 
set Investimento_20 = (select ((sum(p.Valor_Total)-sum(p.Custo))*0.2) from Pedido p);
end$$
delimiter ;

-- Criando trigger para cada vez que delete um pedido ele atualize os valores da tabela finanças
delimiter $$
create trigger Financas_TR_Delete after delete
on Pedido
for each row
begin
update Financas 
set Vendas_Total = (select sum(p.Valor_Total) from Pedido p);

update Financas 
set Custo_Total = (select sum(p.Custo) from Pedido p);

update Financas 
set Lucro_Total = (select (sum(p.Valor_Total)-sum(p.Custo)) from Pedido p);

update Financas 
set Maluart_50 = (select ((sum(p.Valor_Total)-sum(p.Custo))*0.5) from Pedido p);

update Financas 
set Salario_30 = (select ((sum(p.Valor_Total)-sum(p.Custo))*0.3) from Pedido p);

update Financas 
set Investimento_20 = (select ((sum(p.Valor_Total)-sum(p.Custo))*0.2) from Pedido p);
end$$
delimiter ;

-- Criando Trigger para cada vez que inserir um pedido calcule o valor restante do Pedido
delimiter $$
create trigger Pedido_TR_Insert before insert
on Pedido
for each row
begin
set new.Restante = (new.Valor_Total - new.Valor_Pago);
end$$
delimiter ;

-- Criando Trigger para cada vez que Editar um pedido atualize o valor restante do pedido
delimiter $$
create trigger Pedido_TR_Update before update
on Pedido
for each row
begin
set new.Restante = (new.Valor_Total - new.Valor_Pago);
end$$
delimiter ;
